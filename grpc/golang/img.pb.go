// Code generated by protoc-gen-go. DO NOT EDIT.
// source: img.proto

package rpc_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StatusCode int32

const (
	StatusCode_SUCC  StatusCode = 0
	StatusCode_FAILE StatusCode = 1
)

var StatusCode_name = map[int32]string{
	0: "SUCC",
	1: "FAILE",
}

var StatusCode_value = map[string]int32{
	"SUCC":  0,
	"FAILE": 1,
}

func (x StatusCode) String() string {
	return proto.EnumName(StatusCode_name, int32(x))
}

func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3d24e0f50a3a3af7, []int{0}
}

type PictureType int32

const (
	PictureType_ANIMAL PictureType = 0
)

var PictureType_name = map[int32]string{
	0: "ANIMAL",
}

var PictureType_value = map[string]int32{
	"ANIMAL": 0,
}

func (x PictureType) String() string {
	return proto.EnumName(PictureType_name, int32(x))
}

func (PictureType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3d24e0f50a3a3af7, []int{1}
}

type FetchPicturesRequest struct {
	UUID                 string      `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Pos                  int32       `protobuf:"varint,2,opt,name=Pos,proto3" json:"Pos,omitempty"`
	Ptype                PictureType `protobuf:"varint,3,opt,name=Ptype,proto3,enum=PictureType" json:"Ptype,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FetchPicturesRequest) Reset()         { *m = FetchPicturesRequest{} }
func (m *FetchPicturesRequest) String() string { return proto.CompactTextString(m) }
func (*FetchPicturesRequest) ProtoMessage()    {}
func (*FetchPicturesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d24e0f50a3a3af7, []int{0}
}

func (m *FetchPicturesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchPicturesRequest.Unmarshal(m, b)
}
func (m *FetchPicturesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchPicturesRequest.Marshal(b, m, deterministic)
}
func (m *FetchPicturesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchPicturesRequest.Merge(m, src)
}
func (m *FetchPicturesRequest) XXX_Size() int {
	return xxx_messageInfo_FetchPicturesRequest.Size(m)
}
func (m *FetchPicturesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchPicturesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchPicturesRequest proto.InternalMessageInfo

func (m *FetchPicturesRequest) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *FetchPicturesRequest) GetPos() int32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *FetchPicturesRequest) GetPtype() PictureType {
	if m != nil {
		return m.Ptype
	}
	return PictureType_ANIMAL
}

type FetchPicturesResponse struct {
	Status               StatusCode     `protobuf:"varint,1,opt,name=status,proto3,enum=StatusCode" json:"status,omitempty"`
	Msg                  string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Info                 []*PictureInfo `protobuf:"bytes,3,rep,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *FetchPicturesResponse) Reset()         { *m = FetchPicturesResponse{} }
func (m *FetchPicturesResponse) String() string { return proto.CompactTextString(m) }
func (*FetchPicturesResponse) ProtoMessage()    {}
func (*FetchPicturesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d24e0f50a3a3af7, []int{1}
}

func (m *FetchPicturesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchPicturesResponse.Unmarshal(m, b)
}
func (m *FetchPicturesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchPicturesResponse.Marshal(b, m, deterministic)
}
func (m *FetchPicturesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchPicturesResponse.Merge(m, src)
}
func (m *FetchPicturesResponse) XXX_Size() int {
	return xxx_messageInfo_FetchPicturesResponse.Size(m)
}
func (m *FetchPicturesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchPicturesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchPicturesResponse proto.InternalMessageInfo

func (m *FetchPicturesResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_SUCC
}

func (m *FetchPicturesResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *FetchPicturesResponse) GetInfo() []*PictureInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type PictureInfo struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Axis_X               int32    `protobuf:"varint,2,opt,name=axis_X,json=axisX,proto3" json:"axis_X,omitempty"`
	Axis_Y               int32    `protobuf:"varint,3,opt,name=axis_Y,json=axisY,proto3" json:"axis_Y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PictureInfo) Reset()         { *m = PictureInfo{} }
func (m *PictureInfo) String() string { return proto.CompactTextString(m) }
func (*PictureInfo) ProtoMessage()    {}
func (*PictureInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d24e0f50a3a3af7, []int{2}
}

func (m *PictureInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PictureInfo.Unmarshal(m, b)
}
func (m *PictureInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PictureInfo.Marshal(b, m, deterministic)
}
func (m *PictureInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PictureInfo.Merge(m, src)
}
func (m *PictureInfo) XXX_Size() int {
	return xxx_messageInfo_PictureInfo.Size(m)
}
func (m *PictureInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PictureInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PictureInfo proto.InternalMessageInfo

func (m *PictureInfo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *PictureInfo) GetAxis_X() int32 {
	if m != nil {
		return m.Axis_X
	}
	return 0
}

func (m *PictureInfo) GetAxis_Y() int32 {
	if m != nil {
		return m.Axis_Y
	}
	return 0
}

func init() {
	proto.RegisterEnum("StatusCode", StatusCode_name, StatusCode_value)
	proto.RegisterEnum("PictureType", PictureType_name, PictureType_value)
	proto.RegisterType((*FetchPicturesRequest)(nil), "FetchPicturesRequest")
	proto.RegisterType((*FetchPicturesResponse)(nil), "FetchPicturesResponse")
	proto.RegisterType((*PictureInfo)(nil), "PictureInfo")
}

func init() { proto.RegisterFile("img.proto", fileDescriptor_3d24e0f50a3a3af7) }

var fileDescriptor_3d24e0f50a3a3af7 = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x51, 0x4f, 0xc2, 0x30,
	0x14, 0x85, 0x99, 0x63, 0x0b, 0xbb, 0x10, 0xb2, 0xdc, 0x88, 0x99, 0x3e, 0xcd, 0xf9, 0xb2, 0xf0,
	0xb0, 0x44, 0xfc, 0x01, 0x06, 0x51, 0x92, 0x25, 0x60, 0xb0, 0x48, 0x02, 0xbe, 0x28, 0xce, 0x82,
	0x4b, 0x84, 0xd6, 0xb5, 0x23, 0xf2, 0xef, 0x4d, 0x6b, 0x03, 0xc4, 0xf0, 0x76, 0x7a, 0x4e, 0x72,
	0xbf, 0x9e, 0x7b, 0xc1, 0xcb, 0x57, 0xcb, 0x84, 0x17, 0x4c, 0xb2, 0xe8, 0x0d, 0x4e, 0xfb, 0x54,
	0x66, 0x9f, 0xa3, 0x3c, 0x93, 0x65, 0x41, 0x05, 0xa1, 0xdf, 0x25, 0x15, 0x12, 0x11, 0xaa, 0x93,
	0x49, 0x7a, 0x1f, 0x58, 0xa1, 0x15, 0x7b, 0x44, 0x6b, 0xf4, 0xc1, 0x1e, 0x31, 0x11, 0x9c, 0x84,
	0x56, 0xec, 0x10, 0x25, 0x31, 0x02, 0x67, 0x24, 0xb7, 0x9c, 0x06, 0x76, 0x68, 0xc5, 0xcd, 0x4e,
	0x23, 0x31, 0x63, 0x9e, 0xb7, 0x9c, 0x92, 0xbf, 0x28, 0xe2, 0xd0, 0xfa, 0x47, 0x10, 0x9c, 0xad,
	0x05, 0xc5, 0x2b, 0x70, 0x85, 0x9c, 0xcb, 0x52, 0x68, 0x48, 0xb3, 0x53, 0x4f, 0xc6, 0xfa, 0xd9,
	0x63, 0x1f, 0x94, 0x98, 0x48, 0x31, 0x57, 0x62, 0xa9, 0x99, 0x1e, 0x51, 0x12, 0x43, 0xa8, 0xe6,
	0xeb, 0x05, 0x0b, 0xec, 0xd0, 0x8e, 0xeb, 0x7b, 0x64, 0xba, 0x5e, 0x30, 0xa2, 0x93, 0x68, 0x08,
	0xf5, 0x03, 0x53, 0x8d, 0x28, 0x8b, 0x2f, 0xd3, 0x44, 0x49, 0x6c, 0x81, 0x3b, 0xff, 0xc9, 0xc5,
	0xeb, 0xd4, 0x74, 0x71, 0xd4, 0x6b, 0xba, 0xb3, 0x67, 0xba, 0x8e, 0xb1, 0x67, 0xed, 0x4b, 0x80,
	0xfd, 0xc7, 0xb0, 0x06, 0xd5, 0xf1, 0xa4, 0xd7, 0xf3, 0x2b, 0xe8, 0x81, 0xd3, 0xef, 0xa6, 0x83,
	0x07, 0xdf, 0x6a, 0x9f, 0xef, 0x88, 0xaa, 0x39, 0x02, 0xb8, 0xdd, 0xc7, 0x74, 0xd8, 0x1d, 0xf8,
	0x95, 0xce, 0x13, 0x34, 0x4d, 0x34, 0xa6, 0xc5, 0x26, 0xcf, 0x28, 0xde, 0x42, 0xe3, 0x70, 0x21,
	0xd8, 0x4a, 0x8e, 0x5d, 0xe0, 0xe2, 0x2c, 0x39, 0xba, 0xb6, 0xa8, 0x72, 0x57, 0x7b, 0x71, 0x0b,
	0x9e, 0x25, 0x9b, 0xeb, 0x77, 0x57, 0x1f, 0xf1, 0xe6, 0x37, 0x00, 0x00, 0xff, 0xff, 0xd9, 0x44,
	0x14, 0xef, 0xd1, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PictureServiceClient is the client API for PictureService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PictureServiceClient interface {
	FetchPicture(ctx context.Context, in *FetchPicturesRequest, opts ...grpc.CallOption) (*FetchPicturesResponse, error)
}

type pictureServiceClient struct {
	cc *grpc.ClientConn
}

func NewPictureServiceClient(cc *grpc.ClientConn) PictureServiceClient {
	return &pictureServiceClient{cc}
}

func (c *pictureServiceClient) FetchPicture(ctx context.Context, in *FetchPicturesRequest, opts ...grpc.CallOption) (*FetchPicturesResponse, error) {
	out := new(FetchPicturesResponse)
	err := c.cc.Invoke(ctx, "/PictureService/FetchPicture", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PictureServiceServer is the server API for PictureService service.
type PictureServiceServer interface {
	FetchPicture(context.Context, *FetchPicturesRequest) (*FetchPicturesResponse, error)
}

// UnimplementedPictureServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPictureServiceServer struct {
}

func (*UnimplementedPictureServiceServer) FetchPicture(ctx context.Context, req *FetchPicturesRequest) (*FetchPicturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchPicture not implemented")
}

func RegisterPictureServiceServer(s *grpc.Server, srv PictureServiceServer) {
	s.RegisterService(&_PictureService_serviceDesc, srv)
}

func _PictureService_FetchPicture_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchPicturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PictureServiceServer).FetchPicture(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PictureService/FetchPicture",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PictureServiceServer).FetchPicture(ctx, req.(*FetchPicturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PictureService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "PictureService",
	HandlerType: (*PictureServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchPicture",
			Handler:    _PictureService_FetchPicture_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "img.proto",
}
